version: '3.8'

services:
#database engine service
  postgres_db:
    #container_name: postgres
    image: postgres:latest
    restart: always
    ports:
      - 5432:5432
    volumes:
        #allow *.sql, *.sql.gz, or *.sh and is execute only if data directory is empty
      - ./dbfiles:/docker-entrypoint-initdb.d
      - /var/lib/postgres_data:/var/lib/postgresql/data:rw
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: qwerty
      POSTGRES_DB: postgres
      
#database admin service
  adminer:
    #container_name: adminer
    image: adminer
    restart: always
    depends_on: 
      - postgres_db
    ports:
       - 9090:8080
       
#Billing app backend service
  billingapp-back:
    build:
      context: ./java
      args:
        - JAR_FILE=*.jar
        - DB_PASSWORD=qwerty
    image: billingapp_v2-billingapp-back
    #container_name: billingApp-back      
    environment:
       - JAVA_OPTS=
         -Xms256M 
         -Xmx256M
    depends_on:      
      - postgres_db
    ports:
      - 8080:8080
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: 300M
#recursos dedicados, mantine los recursos disponibles del host para el contenedor
        reservations:
          cpus: "0.1"
          memory: 128M 
      
#Billing app frontend service
  billingapp-front:
    build:
      context: ./angular 
    image: billingapp_v2-billingapp-front
    #container_name: billingApp-front
    depends_on:     
      - billingapp-back
    ports:
      - 80-85:80
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: "0.15"
          memory: 250M
#recursos dedicados, mantine los recursos disponibles del host para el contenedor
        reservations:
          cpus: "0.1"
          memory: 128M
